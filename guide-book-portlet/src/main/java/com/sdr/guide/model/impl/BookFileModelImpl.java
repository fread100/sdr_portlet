package com.sdr.guide.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.sdr.guide.model.BookFile;
import com.sdr.guide.model.BookFileModel;
import com.sdr.guide.model.BookFileSoap;
import com.sdr.guide.service.persistence.BookFilePK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BookFile service. Represents a row in the &quot;test_BookFile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sdr.guide.model.BookFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BookFileImpl}.
 * </p>
 *
 * @author leegyuseong
 * @see BookFileImpl
 * @see com.sdr.guide.model.BookFile
 * @see com.sdr.guide.model.BookFileModel
 * @generated
 */
@JSON(strict = true)
public class BookFileModelImpl extends BaseModelImpl<BookFile>
    implements BookFileModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a book file model instance should use the {@link com.sdr.guide.model.BookFile} interface instead.
     */
    public static final String TABLE_NAME = "test_BookFile";
    public static final Object[][] TABLE_COLUMNS = {
            { "gusetbookId", Types.INTEGER },
            { "fileId", Types.INTEGER },
            { "fileName", Types.VARCHAR },
            { "fileType", Types.VARCHAR },
            { "fileLocation", Types.VARCHAR },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "deleteDate", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table test_BookFile (gusetbookId INTEGER not null,fileId INTEGER not null,fileName VARCHAR(75) null,fileType VARCHAR(75) null,fileLocation VARCHAR(75) null,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,deleteDate DATE null,primary key (gusetbookId, fileId))";
    public static final String TABLE_SQL_DROP = "drop table test_BookFile";
    public static final String ORDER_BY_JPQL = " ORDER BY bookFile.id.gusetbookId ASC, bookFile.id.fileId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY test_BookFile.gusetbookId ASC, test_BookFile.fileId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.sdr.guide.model.BookFile"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.sdr.guide.model.BookFile"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.sdr.guide.model.BookFile"));
    private static ClassLoader _classLoader = BookFile.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            BookFile.class
        };
    private int _gusetbookId;
    private int _fileId;
    private String _fileName;
    private String _fileType;
    private String _fileLocation;
    private long _groupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private Date _deleteDate;
    private BookFile _escapedModel;

    public BookFileModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static BookFile toModel(BookFileSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        BookFile model = new BookFileImpl();

        model.setGusetbookId(soapModel.getGusetbookId());
        model.setFileId(soapModel.getFileId());
        model.setFileName(soapModel.getFileName());
        model.setFileType(soapModel.getFileType());
        model.setFileLocation(soapModel.getFileLocation());
        model.setGroupId(soapModel.getGroupId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setUserId(soapModel.getUserId());
        model.setUserName(soapModel.getUserName());
        model.setCreateDate(soapModel.getCreateDate());
        model.setModifiedDate(soapModel.getModifiedDate());
        model.setDeleteDate(soapModel.getDeleteDate());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<BookFile> toModels(BookFileSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<BookFile> models = new ArrayList<BookFile>(soapModels.length);

        for (BookFileSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public BookFilePK getPrimaryKey() {
        return new BookFilePK(_gusetbookId, _fileId);
    }

    @Override
    public void setPrimaryKey(BookFilePK primaryKey) {
        setGusetbookId(primaryKey.gusetbookId);
        setFileId(primaryKey.fileId);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new BookFilePK(_gusetbookId, _fileId);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((BookFilePK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return BookFile.class;
    }

    @Override
    public String getModelClassName() {
        return BookFile.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("gusetbookId", getGusetbookId());
        attributes.put("fileId", getFileId());
        attributes.put("fileName", getFileName());
        attributes.put("fileType", getFileType());
        attributes.put("fileLocation", getFileLocation());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("deleteDate", getDeleteDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer gusetbookId = (Integer) attributes.get("gusetbookId");

        if (gusetbookId != null) {
            setGusetbookId(gusetbookId);
        }

        Integer fileId = (Integer) attributes.get("fileId");

        if (fileId != null) {
            setFileId(fileId);
        }

        String fileName = (String) attributes.get("fileName");

        if (fileName != null) {
            setFileName(fileName);
        }

        String fileType = (String) attributes.get("fileType");

        if (fileType != null) {
            setFileType(fileType);
        }

        String fileLocation = (String) attributes.get("fileLocation");

        if (fileLocation != null) {
            setFileLocation(fileLocation);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Date deleteDate = (Date) attributes.get("deleteDate");

        if (deleteDate != null) {
            setDeleteDate(deleteDate);
        }
    }

    @JSON
    @Override
    public int getGusetbookId() {
        return _gusetbookId;
    }

    @Override
    public void setGusetbookId(int gusetbookId) {
        _gusetbookId = gusetbookId;
    }

    @JSON
    @Override
    public int getFileId() {
        return _fileId;
    }

    @Override
    public void setFileId(int fileId) {
        _fileId = fileId;
    }

    @JSON
    @Override
    public String getFileName() {
        if (_fileName == null) {
            return StringPool.BLANK;
        } else {
            return _fileName;
        }
    }

    @Override
    public void setFileName(String fileName) {
        _fileName = fileName;
    }

    @JSON
    @Override
    public String getFileType() {
        if (_fileType == null) {
            return StringPool.BLANK;
        } else {
            return _fileType;
        }
    }

    @Override
    public void setFileType(String fileType) {
        _fileType = fileType;
    }

    @JSON
    @Override
    public String getFileLocation() {
        if (_fileLocation == null) {
            return StringPool.BLANK;
        } else {
            return _fileLocation;
        }
    }

    @Override
    public void setFileLocation(String fileLocation) {
        _fileLocation = fileLocation;
    }

    @JSON
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @JSON
    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @JSON
    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @JSON
    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @JSON
    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @JSON
    @Override
    public Date getDeleteDate() {
        return _deleteDate;
    }

    @Override
    public void setDeleteDate(Date deleteDate) {
        _deleteDate = deleteDate;
    }

    @Override
    public BookFile toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (BookFile) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        BookFileImpl bookFileImpl = new BookFileImpl();

        bookFileImpl.setGusetbookId(getGusetbookId());
        bookFileImpl.setFileId(getFileId());
        bookFileImpl.setFileName(getFileName());
        bookFileImpl.setFileType(getFileType());
        bookFileImpl.setFileLocation(getFileLocation());
        bookFileImpl.setGroupId(getGroupId());
        bookFileImpl.setCompanyId(getCompanyId());
        bookFileImpl.setUserId(getUserId());
        bookFileImpl.setUserName(getUserName());
        bookFileImpl.setCreateDate(getCreateDate());
        bookFileImpl.setModifiedDate(getModifiedDate());
        bookFileImpl.setDeleteDate(getDeleteDate());

        bookFileImpl.resetOriginalValues();

        return bookFileImpl;
    }

    @Override
    public int compareTo(BookFile bookFile) {
        BookFilePK primaryKey = bookFile.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof BookFile)) {
            return false;
        }

        BookFile bookFile = (BookFile) obj;

        BookFilePK primaryKey = bookFile.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<BookFile> toCacheModel() {
        BookFileCacheModel bookFileCacheModel = new BookFileCacheModel();

        bookFileCacheModel.gusetbookId = getGusetbookId();

        bookFileCacheModel.fileId = getFileId();

        bookFileCacheModel.fileName = getFileName();

        String fileName = bookFileCacheModel.fileName;

        if ((fileName != null) && (fileName.length() == 0)) {
            bookFileCacheModel.fileName = null;
        }

        bookFileCacheModel.fileType = getFileType();

        String fileType = bookFileCacheModel.fileType;

        if ((fileType != null) && (fileType.length() == 0)) {
            bookFileCacheModel.fileType = null;
        }

        bookFileCacheModel.fileLocation = getFileLocation();

        String fileLocation = bookFileCacheModel.fileLocation;

        if ((fileLocation != null) && (fileLocation.length() == 0)) {
            bookFileCacheModel.fileLocation = null;
        }

        bookFileCacheModel.groupId = getGroupId();

        bookFileCacheModel.companyId = getCompanyId();

        bookFileCacheModel.userId = getUserId();

        bookFileCacheModel.userName = getUserName();

        String userName = bookFileCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            bookFileCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            bookFileCacheModel.createDate = createDate.getTime();
        } else {
            bookFileCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            bookFileCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            bookFileCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        Date deleteDate = getDeleteDate();

        if (deleteDate != null) {
            bookFileCacheModel.deleteDate = deleteDate.getTime();
        } else {
            bookFileCacheModel.deleteDate = Long.MIN_VALUE;
        }

        return bookFileCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(25);

        sb.append("{gusetbookId=");
        sb.append(getGusetbookId());
        sb.append(", fileId=");
        sb.append(getFileId());
        sb.append(", fileName=");
        sb.append(getFileName());
        sb.append(", fileType=");
        sb.append(getFileType());
        sb.append(", fileLocation=");
        sb.append(getFileLocation());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", deleteDate=");
        sb.append(getDeleteDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(40);

        sb.append("<model><model-name>");
        sb.append("com.sdr.guide.model.BookFile");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>gusetbookId</column-name><column-value><![CDATA[");
        sb.append(getGusetbookId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fileId</column-name><column-value><![CDATA[");
        sb.append(getFileId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fileName</column-name><column-value><![CDATA[");
        sb.append(getFileName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fileType</column-name><column-value><![CDATA[");
        sb.append(getFileType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fileLocation</column-name><column-value><![CDATA[");
        sb.append(getFileLocation());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deleteDate</column-name><column-value><![CDATA[");
        sb.append(getDeleteDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
